
https://dashboard.heroku.com/apps/soundanalyzerng
https://soundanalyzerng.herokuapp.com/
https://github.com/mcoons/soundAnalyzerNg



Ribbon Particle Shapes
https://www.babylonjs-playground.com/#1HSC2O#242



TODO
_______________________________________________________________________
crystal ball with flickering light inbside - Lindsey - When the stars align


Flesh out Exploding SPS options in panel
Add camera positioning to Exploding SPS (remove use interaction?)
Fix camera options for things

Add OnResize events to canvas 

Separate default options from current/player options;
Implement Star Zooming
Implement 2D history layer in the back.

Fix playlist selection button highlight when canceling coming from mic



Check for CSS cross browser changes

Make the main player size constant
Add sin() to camera movement on eq visual
Clean up messaging.
Pick a library to use and update code - Bootstrap, BootstrapNg, Material 
Make variables private and assign types where possible
Do something cool with Title
Add auto change of visual between songs.  User selectable list?


Add multiple scenes, one for each visual, then render the current selected scene

Add testing (Karma, Jasmine)

Determine relation between pixels on all layers 
 a) where top of player div relates to 2d canvas  DONE
 b) cast ray from 2d pt into 3d
 c) div to 3d

----------------------------------------------------------------------



angular is wrapped by an express server for prod deployment on Heroku

    to build prod for express server
    ng build --aot --prod

    to run prod express server on localhost:8080
    node server.js       

    to run local ng dev server on localhost:4200
    ng serve


To Reduce a Large Heroku Slug Size
    heroku plugins:install heroku-repo

    heroku repo:gc --app soundanalyzerng
    heroku repo:purge_cache --app soundanalyzerng

Audio Node Mapping

            audioSrc   <-  volume
                |
            tdAnalyser
                |
             splitter
             /      \
       gainNode     destination
           |
       analysers           


AudioNode.connect(destination)
AudioNode.disconnect();

MediaStreamTrackAudioSourceNode
BiquadFilterNode



1920x1200, 1680x1050, 1280x800, and 1024x640

// tslint:disable-next-line: max-line-length










M4A does not play


IN PARTICLE update

expanding

scale - lerping current to next
position - lerping current to exp local
rotation - lerping current to next
color - lerping current to next


contracting

scaling -  next
position - lerping exp loc to next
rotation - next
color - next


else   (current = next at this time)

scaling - current
position - current 
rotation - current
color - current



IN MAIN update

expanding

SPS rotation - lerping current to next
Camera - lerping current to next



contracting

SPS rotation - next



else   (current = next at this time)

SPS rotation - current




            // if (this.nextSPS <= this.currentSPS) {
            //     this.previousCameraIndex = this.currentCameraIndex;
            //     this.currentCameraIndex += 1;
            //     if (this.currentCameraIndex === 2) {
            //         this.currentCameraIndex = 0;
            //     }
            //     this.cameraSwap = true;
            //     console.log('camera swap');
            // }


            const cameraSettingsCurrent =
                // this.cameraSwap ?
                this.SPSFunctions[this.currentSPS].cameraDefault(this.currentCameraIndex) // :
                // this.SPSFunctions[this.currentSPS].cameraDefault(this.previousCameraIndex);
            const cameraSettingsNext = this.SPSFunctions[this.nextSPS].cameraDefault(this.currentCameraIndex);

            (this.scene.cameras[0] as BABYLON.ArcRotateCamera).alpha =
                BABYLON.Scalar.Lerp(
                    cameraSettingsCurrent.alpha,
                    cameraSettingsNext.alpha,
                    this.conTimer);


            (this.scene.cameras[0] as BABYLON.ArcRotateCamera).beta =
                BABYLON.Scalar.Lerp(
                    cameraSettingsCurrent.beta,
                    cameraSettingsNext.beta,
                    this.conTimer);


            (this.scene.cameras[0] as BABYLON.ArcRotateCamera).radius =
                BABYLON.Scalar.Lerp(
                    cameraSettingsCurrent.radius,
                    cameraSettingsNext.radius,
                    this.conTimer);



                    [[{"_isDirty":true,"_x":0.7071067811865476,"_y":-0.7071067811865475,"_z":-2},{"_isDirty":true,"_x":0.7071067811865476,"_y":0.7071067811865475,"_z":-2},{"_isDirty":true,"_x":-0.7071067811865475,"_y":0.7071067811865476,"_z":-2},{"_isDirty":true,"_x":-0.7071067811865477,"_y":-0.7071067811865475,"_z":-2},{"_isDirty":true,"_x":0.7071067811865474,"_y":-0.7071067811865477,"_z":-2}],[{"_isDirty":true,"_x":0.9238795325112867,"_y":-0.3826834323650898,"_z":-1},{"_isDirty":true,"_x":0.38268343236508984,"_y":0.9238795325112867,"_z":-1},{"_isDirty":true,"_x":-0.9238795325112867,"_y":0.3826834323650899,"_z":-1},{"_isDirty":true,"_x":-0.38268343236509034,"_y":-0.9238795325112865,"_z":-1},{"_isDirty":true,"_x":0.9238795325112865,"_y":-0.3826834323650904,"_z":-1}],[{"_isDirty":true,"_x":1,"_y":0,"_z":0},{"_isDirty":true,"_x":6.123233995736766e-17,"_y":1,"_z":0},{"_isDirty":true,"_x":-1,"_y":1.2246467991473532e-16,"_z":0},{"_isDirty":true,"_x":-1.8369701987210297e-16,"_y":-1,"_z":0},{"_isDirty":true,"_x":1,"_y":-2.4492935982947064e-16,"_z":0}],[{"_isDirty":true,"_x":0.9238795325112867,"_y":0.3826834323650898,"_z":1},{"_isDirty":true,"_x":-0.3826834323650897,"_y":0.9238795325112867,"_z":1},{"_isDirty":true,"_x":-0.9238795325112868,"_y":-0.38268343236508967,"_z":1},{"_isDirty":true,"_x":0.38268343236509,"_y":-0.9238795325112866,"_z":1},{"_isDirty":true,"_x":0.9238795325112867,"_y":0.38268343236508995,"_z":1}],[{"_isDirty":true,"_x":0.7071067811865476,"_y":0.7071067811865475,"_z":2},{"_isDirty":true,"_x":-0.7071067811865475,"_y":0.7071067811865476,"_z":2},{"_isDirty":true,"_x":-0.7071067811865477,"_y":-0.7071067811865475,"_z":2},{"_isDirty":true,"_x":0.7071067811865474,"_y":-0.7071067811865477,"_z":2},{"_isDirty":true,"_x":0.7071067811865477,"_y":0.7071067811865474,"_z":2}]]